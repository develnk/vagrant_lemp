<% if @conf_inc != '' -%>
include <%= @conf_inc %>;
<% end -%>
<% if @flag_www_redirect -%>
server {
  server_name www.<%= @domain %>;
  rewrite ^(.*) http://<%= @domain %>$1 permanent;
}
<% end -%>
server {
  <% if @server_port != '' -%>
  listen <%= @server_port %>;
  <% end -%>

  <% if @domain != '' -%>
  server_name <%= @domain %>;
  <% end -%>
  access_log  <%= @logdir %>/<%= @server_name %>.access.log;

  <% if @ssl == 'on' -%>
  ssl on;
  <% end -%>
  <% if @ssl_certificate != '' -%>
  ssl_certificate <%= @ssl_certificate %>;
  <% end -%>
  <% if @ssl_certificate_key != '' -%>
  ssl_certificate_key <%= @ssl_certificate_key %>;
  <% end -%>

  root <%= @docroot %>;
  index index.php index.html;

  if (!-e $request_filename) {
    rewrite  ^/(.*)$  /index.php?q=$1  last;
    break;
  }

  location / {
    # cors configuration
    # whitelist of allowed domains, via a regular expression
    # if ($http_origin ~* (http://localhost(:[0-9]+)?)) {
    if ($http_origin ~* .*) {
    set $cors "true";
    }

    # apparently, the following three if statements create a flag for "compound conditions"
    if ($request_method = OPTIONS) {
    set $cors "${cors}options";
    }

    if ($request_method = GET) {
    set $cors "${cors}get";
    }

    if ($request_method = POST) {
    set $cors "${cors}post";
    }

    # now process the flag
    if ($cors = 'trueget') {
    add_header 'Access-Control-Allow-Origin' "$http_origin";
    add_header 'Access-Control-Allow-Credentials' 'true';
    }

    if ($cors = 'truepost') {
    add_header 'Access-Control-Allow-Origin' "$http_origin";
    add_header 'Access-Control-Allow-Credentials' 'true';
    }

    if ($cors = 'trueoptions') {
    add_header 'Access-Control-Allow-Origin' "$http_origin";
    add_header 'Access-Control-Allow-Credentials' 'true';

    add_header 'Access-Control-Max-Age' 1728000;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';

    add_header 'Content-Length' 0;
    add_header 'Content-Type' 'text/plain charset=UTF-8';
    return 204;
    }
  }

  location ~ (\.php)$ {
    include fastcgi.conf;
    fastcgi_index index.php;
    fastcgi_connect_timeout 120;
    fastcgi_send_timeout 600;
    fastcgi_read_timeout 600;
    fastcgi_buffer_size 128k;
    fastcgi_buffers 4 256k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_intercept_errors on;
    fastcgi_pass 127.0.0.1:9000;
  }

## Images and static content is treated different
  location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|xml)$ {
    access_log        off;
    expires           30d;
  }

## Disable viewing .htaccess & .htpassword
  location ~ /\.ht {
    deny  all;
  }
}
